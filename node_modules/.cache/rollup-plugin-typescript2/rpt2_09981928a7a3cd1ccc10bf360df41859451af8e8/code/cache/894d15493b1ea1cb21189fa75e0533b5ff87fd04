{"code":"import { Dom } from '../../core/dom';\r\nconst RECT_INPUT_SIZE = 18;\r\nconst RECT_INPUT_ICON_SIZE = 14;\r\nconst ROUND_INPUT_SIZE = 7;\r\nexport class InputView {\r\n    constructor(root) {\r\n        this.root = root;\r\n    }\r\n    static createRectInput(parent, x, y, iconUrl) {\r\n        const g = Dom.svg('g');\r\n        parent.appendChild(g);\r\n        const rect = Dom.svg('rect', {\r\n            class: 'sqd-input',\r\n            width: RECT_INPUT_SIZE,\r\n            height: RECT_INPUT_SIZE,\r\n            x: x - RECT_INPUT_SIZE / 2,\r\n            y: y + RECT_INPUT_SIZE / -2 + 0.5,\r\n            rx: 4,\r\n            ry: 4\r\n        });\r\n        g.appendChild(rect);\r\n        if (iconUrl) {\r\n            const icon = Dom.svg('image', {\r\n                href: iconUrl,\r\n                width: RECT_INPUT_ICON_SIZE,\r\n                height: RECT_INPUT_ICON_SIZE,\r\n                x: x - RECT_INPUT_ICON_SIZE / 2,\r\n                y: y + RECT_INPUT_ICON_SIZE / -2\r\n            });\r\n            g.appendChild(icon);\r\n        }\r\n        return new InputView(g);\r\n    }\r\n    static createRoundInput(parent, x, y) {\r\n        const circle = Dom.svg('circle', {\r\n            class: 'sqd-input',\r\n            cx: x,\r\n            xy: y,\r\n            r: ROUND_INPUT_SIZE\r\n        });\r\n        parent.appendChild(circle);\r\n        return new InputView(circle);\r\n    }\r\n    setIsHidden(isHidden) {\r\n        Dom.attrs(this.root, {\r\n            visibility: isHidden ? 'hidden' : 'visible'\r\n        });\r\n    }\r\n}\r\n","references":["/Users/mm/Documents/IntelliProIntern/sequential-flow-chart-front-end/src/core/dom.ts"],"dts":{"name":"/Users/mm/Documents/IntelliProIntern/sequential-flow-chart-front-end/build/src/workspace/common-views/input-view.d.ts","writeByteOrderMark":false,"text":"export declare class InputView {\r\n    private readonly root;\r\n    static createRectInput(parent: SVGElement, x: number, y: number, iconUrl: string | null): InputView;\r\n    static createRoundInput(parent: SVGElement, x: number, y: number): InputView;\r\n    private constructor();\r\n    setIsHidden(isHidden: boolean): void;\r\n}\r\n"}}
