{"code":"import { Dom } from '../../core/dom';\r\nexport class JoinView {\r\n    static createStraightJoin(parent, start, height) {\r\n        const join = Dom.svg('line', {\r\n            class: 'sqd-join',\r\n            x1: start.x,\r\n            y1: start.y,\r\n            x2: start.x,\r\n            y2: start.y + height\r\n        });\r\n        parent.insertBefore(join, parent.firstChild);\r\n    }\r\n    static createJoins(parent, start, targets) {\r\n        for (const target of targets) {\r\n            const c = Math.abs(start.y - target.y) / 2; // size of a corner\r\n            const l = Math.abs(start.x - target.x) - c * 2; // size of the line between corners\r\n            const x = start.x > target.x ? -1 : 1;\r\n            const y = start.y > target.y ? -1 : 1;\r\n            const join = Dom.svg('path', {\r\n                class: 'sqd-join',\r\n                fill: 'none',\r\n                d: `M ${start.x} ${start.y} q ${x * c * 0.3} ${y * c * 0.8} ${x * c} ${y * c} l ${x * l} 0 q ${x * c * 0.7} ${y * c * 0.2} ${x * c} ${y * c}`\r\n            });\r\n            parent.insertBefore(join, parent.firstChild);\r\n        }\r\n    }\r\n}\r\n","references":["/Users/mm/Documents/IntelliProIntern/sequential-flow-chart-front-end/src/core/dom.ts","/Users/mm/Documents/IntelliProIntern/sequential-flow-chart-front-end/src/core/vector.ts"],"dts":{"name":"/Users/mm/Documents/IntelliProIntern/sequential-flow-chart-front-end/build/src/workspace/common-views/join-view.d.ts","writeByteOrderMark":false,"text":"import { Vector } from '../../core/vector';\r\nexport declare class JoinView {\r\n    static createStraightJoin(parent: SVGElement, start: Vector, height: number): void;\r\n    static createJoins(parent: SVGElement, start: Vector, targets: Vector[]): void;\r\n}\r\n"}}
