{"code":"import { DragStepBehavior } from './drag-step-behavior';\r\nexport class SelectStepBehavior {\r\n    constructor(pressedStepComponent, context) {\r\n        this.pressedStepComponent = pressedStepComponent;\r\n        this.context = context;\r\n    }\r\n    static create(pressedStepComponent, context) {\r\n        return new SelectStepBehavior(pressedStepComponent, context);\r\n    }\r\n    onStart() {\r\n        // Nothing to do.\r\n    }\r\n    onMove(delta) {\r\n        if (!this.context.isReadonly && delta.distance() > 2) {\r\n            this.context.setSelectedStep(null);\r\n            return DragStepBehavior.create(this.context, this.pressedStepComponent.step, this.pressedStepComponent);\r\n        }\r\n    }\r\n    onEnd(interrupt) {\r\n        if (!interrupt) {\r\n            this.context.setSelectedStep(this.pressedStepComponent.step);\r\n        }\r\n    }\r\n}\r\n","references":["/Users/mm/Documents/IntelliProIntern/sequential-flow-chart-front-end/src/core/vector.ts","/Users/mm/Documents/IntelliProIntern/sequential-flow-chart-front-end/src/designer-context.ts","/Users/mm/Documents/IntelliProIntern/sequential-flow-chart-front-end/src/workspace/component.ts","/Users/mm/Documents/IntelliProIntern/sequential-flow-chart-front-end/src/behaviors/behavior.ts","/Users/mm/Documents/IntelliProIntern/sequential-flow-chart-front-end/src/behaviors/drag-step-behavior.ts"],"dts":{"name":"/Users/mm/Documents/IntelliProIntern/sequential-flow-chart-front-end/build/behaviors/select-step-behavior.d.ts","writeByteOrderMark":false,"text":"import { Vector } from '../core/vector';\r\nimport { DesignerContext } from '../designer-context';\r\nimport { StepComponent } from '../workspace/component';\r\nimport { Behavior } from './behavior';\r\nexport declare class SelectStepBehavior implements Behavior {\r\n    private readonly pressedStepComponent;\r\n    private readonly context;\r\n    static create(pressedStepComponent: StepComponent, context: DesignerContext): SelectStepBehavior;\r\n    private constructor();\r\n    onStart(): void;\r\n    onMove(delta: Vector): Behavior | void;\r\n    onEnd(interrupt: boolean): void;\r\n}\r\n"}}
