{"code":"import { Dom } from '../../core/dom';\r\nimport { SequenceComponent } from '../sequence/sequence-component';\r\nconst SIZE = 30;\r\nexport class StartStopComponentView {\r\n    constructor(g, width, height, joinX, component) {\r\n        this.g = g;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.joinX = joinX;\r\n        this.component = component;\r\n    }\r\n    static create(parent, sequence, configuration) {\r\n        const g = Dom.svg('g');\r\n        parent.appendChild(g);\r\n        const sequenceComponent = SequenceComponent.create(g, sequence, configuration);\r\n        const view = sequenceComponent.view;\r\n        const startCircle = createCircle(true);\r\n        Dom.translate(startCircle, view.joinX - SIZE / 2, 0);\r\n        g.appendChild(startCircle);\r\n        Dom.translate(view.g, 0, SIZE);\r\n        const endCircle = createCircle(false);\r\n        Dom.translate(endCircle, view.joinX - SIZE / 2, SIZE + view.height);\r\n        g.appendChild(endCircle);\r\n        return new StartStopComponentView(g, view.width, view.height + SIZE * 2, view.joinX, sequenceComponent);\r\n    }\r\n    getClientPosition() {\r\n        throw new Error('Not supported');\r\n    }\r\n    destroy() {\r\n        var _a;\r\n        (_a = this.g.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(this.g);\r\n    }\r\n}\r\nfunction createCircle(isStart) {\r\n    const circle = Dom.svg('circle', {\r\n        class: 'sqd-start-stop',\r\n        cx: SIZE / 2,\r\n        cy: SIZE / 2,\r\n        r: SIZE / 2\r\n    });\r\n    const g = Dom.svg('g');\r\n    g.appendChild(circle);\r\n    const s = SIZE * 0.5;\r\n    const m = (SIZE - s) / 2;\r\n    if (isStart) {\r\n        const start = Dom.svg('path', {\r\n            class: 'sqd-start-stop-icon',\r\n            transform: `translate(${m}, ${m})`,\r\n            d: `M ${s * 0.2} 0 L ${s} ${s / 2} L ${s * 0.2} ${s} Z`\r\n        });\r\n        g.appendChild(start);\r\n    }\r\n    else {\r\n        // const stop = Dom.svg('rect', {\r\n        //     class: 'sqd-start-stop-icon',\r\n        //     x: m,\r\n        //     y: m,\r\n        //     width: s,\r\n        //     height: s,\r\n        //     rx: 4,\r\n        //     ry: 4\r\n        // });\r\n        // g.appendChild(stop);\r\n        createEndPoint(g);\r\n    }\r\n    return g;\r\n}\r\n// set a function to create more end points\r\nfunction createEndPoint(g) {\r\n    const circle = Dom.svg('circle', {\r\n        class: 'sqd-start-stop',\r\n        cx: SIZE / 2,\r\n        cy: SIZE / 2,\r\n        r: SIZE / 2\r\n    });\r\n    g.appendChild(circle);\r\n    const s = SIZE * 0.5;\r\n    const m = (SIZE - s) / 2;\r\n    const stop = Dom.svg('rect', {\r\n        class: 'sqd-start-stop-icon',\r\n        x: m,\r\n        y: m,\r\n        width: s,\r\n        height: s,\r\n        rx: 4,\r\n        ry: 4\r\n    });\r\n    g.appendChild(stop);\r\n}\r\n","references":["/Users/mm/Documents/IntelliProIntern/sequential-flow-chart-front-end/src/core/dom.ts","/Users/mm/Documents/IntelliProIntern/sequential-flow-chart-front-end/src/core/vector.ts","/Users/mm/Documents/IntelliProIntern/sequential-flow-chart-front-end/src/definition.ts","/Users/mm/Documents/IntelliProIntern/sequential-flow-chart-front-end/src/designer-configuration.ts","/Users/mm/Documents/IntelliProIntern/sequential-flow-chart-front-end/src/workspace/component.ts","/Users/mm/Documents/IntelliProIntern/sequential-flow-chart-front-end/src/workspace/sequence/sequence-component.ts"],"dts":{"name":"/Users/mm/Documents/IntelliProIntern/sequential-flow-chart-front-end/build/workspace/start-stop/start-stop-component-view.d.ts","writeByteOrderMark":false,"text":"import { Vector } from '../../core/vector';\r\nimport { Sequence } from '../../definition';\r\nimport { StepsConfiguration } from '../../designer-configuration';\r\nimport { ComponentView } from '../component';\r\nimport { SequenceComponent } from '../sequence/sequence-component';\r\nexport declare class StartStopComponentView implements ComponentView {\r\n    readonly g: SVGGElement;\r\n    readonly width: number;\r\n    readonly height: number;\r\n    readonly joinX: number;\r\n    readonly component: SequenceComponent;\r\n    static create(parent: SVGElement, sequence: Sequence, configuration: StepsConfiguration): StartStopComponentView;\r\n    private constructor();\r\n    getClientPosition(): Vector;\r\n    destroy(): void;\r\n}\r\n"}}
