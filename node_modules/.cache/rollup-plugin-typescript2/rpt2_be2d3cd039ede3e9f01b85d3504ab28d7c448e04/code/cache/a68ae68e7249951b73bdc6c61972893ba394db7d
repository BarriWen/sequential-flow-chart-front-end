{"code":"export class MoveViewPortBehavior {\r\n    constructor(startPosition, context) {\r\n        this.startPosition = startPosition;\r\n        this.context = context;\r\n    }\r\n    static create(context) {\r\n        return new MoveViewPortBehavior(context.viewPort.position, context);\r\n    }\r\n    onStart() {\r\n        this.context.setSelectedStep(null);\r\n    }\r\n    onMove(delta) {\r\n        const newPosition = this.startPosition.subtract(delta);\r\n        this.context.setViewPort(newPosition, this.context.viewPort.scale);\r\n    }\r\n    onEnd() {\r\n        // Nothing to do.\r\n    }\r\n}\r\n","references":["/Users/mm/Documents/IntelliProIntern/sequential-flow-chart-front-end/src/core/vector.ts","/Users/mm/Documents/IntelliProIntern/sequential-flow-chart-front-end/src/designer-context.ts","/Users/mm/Documents/IntelliProIntern/sequential-flow-chart-front-end/src/behaviors/behavior.ts"],"dts":{"name":"/Users/mm/Documents/IntelliProIntern/sequential-flow-chart-front-end/build/behaviors/move-view-port-behavior.d.ts","writeByteOrderMark":false,"text":"import { Vector } from '../core/vector';\r\nimport { DesignerContext } from '../designer-context';\r\nimport { Behavior } from './behavior';\r\nexport declare class MoveViewPortBehavior implements Behavior {\r\n    private readonly startPosition;\r\n    private readonly context;\r\n    static create(context: DesignerContext): MoveViewPortBehavior;\r\n    private constructor();\r\n    onStart(): void;\r\n    onMove(delta: Vector): void;\r\n    onEnd(): void;\r\n}\r\n"}}
