{"code":"export class Dom {\r\n    static svg(name, attributes) {\r\n        const element = document.createElementNS('http://www.w3.org/2000/svg', name);\r\n        if (attributes) {\r\n            Dom.attrs(element, attributes);\r\n        }\r\n        return element;\r\n    }\r\n    static translate(element, x, y) {\r\n        element.setAttribute('transform', `translate(${x}, ${y})`);\r\n    }\r\n    static attrs(element, attributes) {\r\n        Object.keys(attributes).forEach(name => {\r\n            const value = attributes[name];\r\n            element.setAttribute(name, typeof value === 'string' ? value : value.toString());\r\n        });\r\n    }\r\n    static element(name, attributes) {\r\n        const element = document.createElement(name);\r\n        if (attributes) {\r\n            Dom.attrs(element, attributes);\r\n        }\r\n        return element;\r\n    }\r\n    static toggleClass(element, isEnabled, className) {\r\n        if (isEnabled) {\r\n            element.classList.add(className);\r\n        }\r\n        else {\r\n            element.classList.remove(className);\r\n        }\r\n    }\r\n}\r\n","references":[],"dts":{"name":"/Users/mm/Documents/IntelliProIntern/sequential-flow-chart-front-end/build/core/dom.d.ts","writeByteOrderMark":false,"text":"export interface Attributes {\r\n    [name: string]: string | number;\r\n}\r\nexport declare class Dom {\r\n    static svg<K extends keyof SVGElementTagNameMap>(name: K, attributes?: Attributes): SVGElementTagNameMap[K];\r\n    static translate(element: SVGElement, x: number, y: number): void;\r\n    static attrs(element: Element, attributes: Attributes): void;\r\n    static element<T extends keyof HTMLElementTagNameMap>(name: T, attributes?: Attributes): HTMLElementTagNameMap[T];\r\n    static toggleClass(element: Element, isEnabled: boolean, className: string): void;\r\n}\r\n"}}
