{"code":"export class SequenceModifier {\r\n    static moveStep(sourceSequence, step, targetSequence, targetIndex) {\r\n        const sourceIndex = sourceSequence.indexOf(step);\r\n        if (sourceIndex < 0) {\r\n            throw new Error('Unknown step');\r\n        }\r\n        const isSameSequence = sourceSequence === targetSequence;\r\n        if (isSameSequence && sourceIndex === targetIndex) {\r\n            return; // Nothing to do.\r\n        }\r\n        sourceSequence.splice(sourceIndex, 1);\r\n        if (isSameSequence && sourceIndex < targetIndex) {\r\n            targetIndex--;\r\n        }\r\n        targetSequence.splice(targetIndex, 0, step);\r\n    }\r\n    static insertStep(step, targetSequence, targetIndex) {\r\n        targetSequence.splice(targetIndex, 0, step);\r\n    }\r\n    static deleteStep(step, parentSequence) {\r\n        const index = parentSequence.indexOf(step);\r\n        if (index < 0) {\r\n            throw new Error('Unknown step');\r\n        }\r\n        parentSequence.splice(index, 1);\r\n    }\r\n}\r\n","references":["/Users/mm/Documents/IntelliProIntern/sequential-flow-chart-front-end/src/definition.ts"],"dts":{"name":"/Users/mm/Documents/IntelliProIntern/sequential-flow-chart-front-end/build/core/sequence-modifier.d.ts","writeByteOrderMark":false,"text":"import { Sequence, Step } from '../definition';\r\nexport declare class SequenceModifier {\r\n    static moveStep(sourceSequence: Sequence, step: Step, targetSequence: Sequence, targetIndex: number): void;\r\n    static insertStep(step: Step, targetSequence: Sequence, targetIndex: number): void;\r\n    static deleteStep(step: Step, parentSequence: Sequence): void;\r\n}\r\n"}}
